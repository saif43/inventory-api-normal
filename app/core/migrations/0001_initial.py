# Generated by Django 2.2.16 on 2020-10-26 07:21

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_owner', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_salesman', models.BooleanField(default=False)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=None, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact', models.CharField(blank=True, max_length=15)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTrasnscation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('money', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('owner', models.ForeignKey(null=True, on_delete=None, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact', models.CharField(blank=True, max_length=15)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='VendorTrasnscation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
                ('vendor', models.ForeignKey(on_delete=None, to='core.Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='VendorTrasnscationBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill', models.PositiveIntegerField(default=0)),
                ('paid', models.PositiveIntegerField(default=0)),
                ('due', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.VendorTrasnscation')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('buying_price', models.PositiveIntegerField(default=0)),
                ('avg_buying_price', models.PositiveIntegerField(default=0)),
                ('selling_price', models.PositiveIntegerField(default=0)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('stock_alert_amount', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='MoveProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('move', models.CharField(choices=[('S2W', 'Shop to Warehouse'), ('W2S', 'Warehouse to Shop')], max_length=3, null=True)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
                ('warehouse', models.ForeignKey(on_delete=None, to='core.Warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='Empty', max_length=255)),
                ('amount', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerTrasnscationBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill', models.PositiveIntegerField(default=0)),
                ('paid', models.PositiveIntegerField(default=0)),
                ('due', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.CustomerTrasnscation')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
        ),
        migrations.AddField(
            model_name='customertrasnscation',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop'),
        ),
        migrations.AddField(
            model_name='customer',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Shop'),
        ),
        migrations.CreateModel(
            name='WareHouseProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Warehouse')),
            ],
            options={
                'unique_together': {('warehouse', 'product')},
            },
        ),
        migrations.CreateModel(
            name='VendorOrderedItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buying_price', models.PositiveIntegerField(default=0)),
                ('custom_buying_price', models.PositiveIntegerField(default=0)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('bill', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(null=True, upload_to=core.models.transaction_image_file_path)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('delivery_warehouse', models.ForeignKey(null=True, on_delete=None, to='core.Warehouse')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.VendorTrasnscation')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
                ('product_detail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_product_detail', to='core.Product')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
            options={
                'unique_together': {('order', 'shop', 'product', 'delivery_warehouse')},
            },
        ),
        migrations.CreateModel(
            name='CustomerOrderedItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selling_price', models.PositiveIntegerField(default=0)),
                ('custom_selling_price', models.PositiveIntegerField(default=0)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('bill', models.PositiveIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.CustomerTrasnscation')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
                ('product_detail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_detail', to='core.Product')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Shop')),
            ],
            options={
                'unique_together': {('order', 'shop', 'product')},
            },
        ),
    ]
